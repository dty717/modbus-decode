<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>